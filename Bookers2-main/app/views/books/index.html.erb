<% if @book.errors.any? %>
<div class="container px-sm-0">
  <h3 class="text-danger"><%= pluralize(@book.errors.count, "error") %> prohibited this obj from being saved:</h3>
  <ul>
    <% @book.errors.full_messages.each do |message| %>
      <li class="text-danger"><%= message %></li>
    <% end %>
  </ul>
</div>
<% end %>



<div class="container px-sm-0">
  <div class="row">
    <div class="col-md-3">
      <%= render "layouts/side", user: current_user, book: @book %>
    </div>
    <div class="col-md-8 offset-md-1">


      <!--<%= form_with url: books_path, method: :get, id:'form', local:false do |f| %>-->
      <form id="form" action="/books" accept-charset="UTF-8" data-remote="true" method="get"><input name="utf8" type="hidden" value="✓">
        <div id="search">
          <input type="hidden" id="tag-name" class="form-control" v-model="tags" name="content">
          <div id="tag" class="d-flex flex-wrap align-items-center border rounded py-2 px-1">
            <div class="badge badge-primary badge-pill mr-1" style="font-size: 100%;" v-for="tag in tags">
              {{tag}}<span class="pl-1" type="button"v-on:click="delTag(tag)">×</span>
            </div>
            <input class="border-0" style="outline: 0" type="text" placeholder="ここに追加" v-model="newTag" v-on:keydown.enter="setTag">
          </div>
        </div>
　　　　<input type="submit" name="commit" value="検索" id="search-btn" class="btn btn-primary" style="display: none;" data-disable-with="検索">
       <!-- <div class="form-group">-->
       <!--   <%= f.submit "検索", type:'hidden', "data-remote":"true", id:"search-btn", class:"btn btn-primary" %>-->
      　<!--</div>-->
      </form>
      <!--<% end %>-->

      <script>
        new Vue ({
          el: '#search',
          data () {
              return {
                newTag: null,
                tags: [],
              }
          },
          methods: {
            setTag: function (event) {
              if (event.keyCode !== 13) return
              var tag = this.newTag;
              this.tags.push(tag);
              this.newTag = '';
            },
            delTag: function(tag) {
              this.tags.splice(this.tags.indexOf(tag), 1);
            },
          },
          watch: {
            tags: function() {
              setTimeout(function() {
                // axios.get('books',{
                //     params: {
                //       content: '恋愛'
                //     }
                //   })
                // .then(response => console.log(response))
                // .catch(error => console.log(error))
                document.getElementById("search-btn").click();
              }, 1)
            }
          }
        })
      </script>

      <!--<script>-->
      <!--  new Vue ({-->
      <!--    el: '#search',-->
      <!--    data () {-->
      <!--      return {-->
      <!--        content: '',-->
      <!--      }-->
      <!--    },-->

      <!--    methods: {-->
      <!--      onInput({target}) {-->
      <!--        this.content = target.value;-->
      <!--        document.getElementById('title-search').click();-->
      <!--      }-->
      <!--    }-->
      <!--  })-->
      <!--</script>-->

      <h2>Books</h2>
      <div class="sort-bar">
        <%= link_to "新しい順", books_path(sort: 'created_at DESC') %>
        |
        <%= link_to "評価が高い順", books_path(sort: "evaluation DESC") %>
        |
        <%= link_to "いいね順(1週間)", books_path(sort: :favorite_desc) %>
      </div>
      <div class="book-list">
        <%= render 'books/index', books: @books %>
      </div>
    </div>
  </div>
</div>